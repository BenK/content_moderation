<?php
// $Id:$

/**
 * @file
 * Install file for the content moderation module.
 *
 * Copyright (c) 2010 Impressive.media
 * Author: Eugen Mayer
 *
 */


/**
 * Implements hook_install().
 */
function content_moderation_install() {
  // Create tables. 
  _content_moderation_insert_values();
  db_query("UPDATE {system} SET weight = 5 WHERE name = 'content_moderation'");
}



/**
 * Implements hook_schema().
 */
function content_moderation_schema() {
  $schema['content_moderation_revision_state'] = array(
    'description' => 'Saves the current live vid of a node',
    'fields'  => array(
      'vid'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'nid'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'state_name' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
    ),
    'primary key' => array('vid'),
  );

  $schema['content_moderation_states'] = array(
    'description' => 'Defines all possible states',
    'fields'    => array(
      'name'    => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'descr'   => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'weight'  => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'size' => 'small'),
    ),
    'unique keys' => array('name' => array('name'))
  );

  $schema['content_moderation_node_history'] = array(
    'fields' => array(
      'hid'     => array('type' => 'serial', 'not null' => TRUE),
      'vid'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'disp-width' => '10'),
      'nid'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'disp-width' => '10'),
      'old_state_name' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'state_name'     => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'uid'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'disp-width' => '10'),
      'stamp'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'disp-width' => '10'),
      'comment' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE)),
    'primary key' => array('hid'),
  );

  $schema['content_moderation_transition'] = array(
    'description' => 'Defines the valid transitions for states',
    'fields' => array(
      'from_name' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'to_name' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
      'ntype' => array('type' => 'varchar', 'length' => '40', 'not null' => FALSE),
    ),
  );

  return $schema;
}


function _content_moderation_insert_values() {
  $states[] = array('name' => content_moderation_none_state());
  $states[] = array('name' => 'review');
  $states[] = array('name' => 'approve');
  $states[] = array('name' => content_moderation_live_state());
  foreach ($states as $state) {
    // See http://drupal.org/node/568640 to change this after it's fixed.
    db_query('INSERT INTO {content_moderation_states} (name) VALUES(:state)', array(':state' => $state['name']));
    //drupal_write_record('content_moderation_states', $state);
  }

  // Default transitions
  $transitions[] = array(content_moderation_none_state(), 'review', 'all');
  $transitions[] = array('review', 'approve', 'all');
  $transitions[] = array('approve', content_moderation_live_state(), 'all');
  $transitions[] = array('review', content_moderation_none_state(), 'all');
  $transitions[] = array('approve', 'review', 'all');
  $transitions[] = array('approve', content_moderation_none_state(), 'all');
  foreach ($transitions as $transition) {
    // See http://drupal.org/node/568640 to change this after it's fixed.
    db_query('INSERT INTO {content_moderation_transition} (from_name, to_name, ntype) VALUES(:from, :to, :ntype)',
      array(':from' => $transition[0], ':to' => $transition[1], ':ntype' => $transition[2])
    );
    //drupal_write_record('content_moderation_transition', $transition);
  }
}